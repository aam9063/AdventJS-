/*
Los elfos est치n trabajando en un sistema para verificar las listas de regalos de los ni침os 游녾游녽. Sin embargo, 
춰algunas listas est치n incompletas y faltan n칰meros!

Tu tarea es escribir una funci칩n que, dado un array de n칰meros, encuentre todos los n칰meros que faltan entre 
1 y n (donde n es el tama침o del array o el n칰mero m치s alto del array).

Eso s칤, ten en cuenta que:

Los n칰meros pueden aparecer m치s de una vez y otros pueden faltar
El array siempre contiene n칰meros enteros positivos
Siempre se empieza a contar desde el 1
findMissingNumbers([1, 2, 4, 6])
[3, 5]

findMissingNumbers([4, 8, 7, 2])
[1, 3, 5, 6]

findMissingNumbers([3, 2, 1, 1])
[]

findDisappearedNumbers([5, 5, 5, 3, 3, 2, 1])
[4]
*/

/**
 * Dado un array de n칰meros (donde puede haber repetidos y faltantes),
 * encuentra todos los n칰meros faltantes entre 1 y n, donde n es el n칰mero
 * m치s alto del array.
 *
 * @param {number[]} nums - Lista de enteros positivos.
 * @returns {number[]} - Lista de n칰meros que faltan.
 */
function findMissingNumbers(nums) {
  // 1. Determinamos el valor m치ximo en nums (n).
  const n = Math.max(...nums);

  // 2. Convertimos nums en un Set para consultar en O(1)
  const present = new Set(nums);

  // 3. Buscamos los n칰meros faltantes entre 1 y n
  const missing = [];
  for (let i = 1; i <= n; i++) {
    if (!present.has(i)) {
      missing.push(i);
    }
  }

  return missing;
}

// Ejemplos:
console.log(findMissingNumbers([1, 2, 4, 6])); // [3, 5]
console.log(findMissingNumbers([4, 8, 7, 2])); // [1, 3, 5, 6]
console.log(findMissingNumbers([3, 2, 1, 1])); // []
console.log(findMissingNumbers([5, 5, 5, 3, 3, 2, 1])); // [4]

  