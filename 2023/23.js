/*
Â¡Santa ðŸŽ… estÃ¡ organizando una gran cena navideÃ±a ðŸ«“ y quiere asegurarse de 
que todos los platos sean Ãºnicos y variados!

Te da una lista de platos navideÃ±os donde cada elemento consiste en una lista de 
strings que comienza con el nombre del plato, seguido de todos los ingredientes 
utilizados para su preparaciÃ³n.

Tienes que escribir una funciÃ³n que agrupe los platos por ingredientes siempre que 
haya al menos 2 platos que los contengan.

AsÃ­ que devolvemos un array de arrays donde la primera posiciÃ³n es el nombre del 
ingrediente y el resto los nombres de los platos.

Tanto la lista de ingredientes como los platos deben estar ordenados alfabÃ©ticamente.

const dishes = [
  ["christmas turkey", "turkey", "sauce", "herbs"],
  ["cake", "flour", "sugar", "egg"],
  ["hot chocolate", "chocolate", "milk", "sugar"],
  ["pizza", "sauce", "tomato", "cheese", "ham"],
]

organizeChristmasDinner(dishes)

"sauce" estÃ¡ en 2 platos: "christmas turkey" y "pizza".
"sugar" estÃ¡ en 2 platos: "cake" y "hot chocolate".
El resto de ingredientes solo aparecen en un plato, por lo que no los mostramos.

EnseÃ±amos primero "sauce" porque alfabÃ©ticamente estÃ¡ antes que "sugar".
Y los platos de cada ingrediente tambiÃ©n estÃ¡n ordenados alfabÃ©ticamente.

[
  ["sauce", "christmas turkey", "pizza"],
  ["sugar", "cake", "hot chocolate"]
]


Ten en cuenta que:

    Todos los nombres de los platos son diferentes.
    Los nombres de los ingredientes para un plato dado son distintos entre sÃ­.
    Si no hay ingredientes repetidos, devolvemos un array vacÃ­o.

*/

function organizeChristmasDinner(dishes) {
    // Diccionario para almacenar ingredientes como claves y una lista de platos como valores
    const ingredientMap = {};
  
    // Recorremos cada plato y sus ingredientes
    for (const dish of dishes) {
      const [dishName, ...ingredients] = dish;
      for (const ingredient of ingredients) {
        if (!ingredientMap[ingredient]) {
          ingredientMap[ingredient] = [];
        }
        ingredientMap[ingredient].push(dishName);
      }
    }
  
    // Filtramos solo aquellos ingredientes que aparecen en 2 o mÃ¡s platos
    const result = [];
    for (const [ingredient, dishList] of Object.entries(ingredientMap)) {
      if (dishList.length >= 2) {
        result.push([ingredient, ...dishList.sort()]);
      }
    }
  
    // Ordenamos el resultado alfabÃ©ticamente por los nombres de los ingredientes
    return result.sort((a, b) => a[0].localeCompare(b[0]));
  }
  
  // Ejemplo de uso
  const dishes = [
    ["christmas turkey", "turkey", "sauce", "herbs"],
    ["cake", "flour", "sugar", "egg"],
    ["hot chocolate", "chocolate", "milk", "sugar"],
    ["pizza", "sauce", "tomato", "cheese", "ham"],
  ];
  
  console.log(organizeChristmasDinner(dishes));
  
  /* Resultado esperado:
  [
    ["sauce", "christmas turkey", "pizza"],
    ["sugar", "cake", "hot chocolate"]
  ]
  */
  